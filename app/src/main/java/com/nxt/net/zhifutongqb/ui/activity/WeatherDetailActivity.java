package com.nxt.net.zhifutongqb.ui.activity;import android.annotation.SuppressLint;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.os.AsyncTask;import android.os.Handler;import android.os.Message;import android.support.v4.view.GravityCompat;import android.support.v4.widget.DrawerLayout;import android.support.v4.widget.SwipeRefreshLayout;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.GridView;import android.widget.ImageView;import android.widget.TextView;import com.baidu.location.BDLocation;import com.baidu.location.BDLocationListener;import com.google.gson.Gson;import com.google.gson.reflect.TypeToken;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.nxt.net.zhifutongqb.R;import com.nxt.net.zhifutongqb.app.API;import com.nxt.net.zhifutongqb.base.BaseTitleActivity;import com.nxt.net.zhifutongqb.bean.WeatherDetail;import com.nxt.net.zhifutongqb.ui.adapter.WeekWeatherAdapter;import com.nxt.net.zhifutongqb.utils.CalendarUtil;import com.nxt.net.zhifutongqb.utils.LocationService;import com.nxt.net.zhifutongqb.utils.TimeUtil;import com.nxt.net.zhifutongqb.utils.ZPreferenceUtils;import com.nxt.net.zhifutongqb.utils.ZToastUtils;import java.util.Calendar;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import butterknife.OnClick;import okhttp3.Call;import okhttp3.Response;/** * @author Maven *         Email: cyjiang_11@163.com *         Description: */public class WeatherDetailActivity extends BaseTitleActivity {    private static final String TAG = "WeatherDetailActivity";    @BindView(R.id.iv_nav)    ImageView ivNav;    @BindView(R.id.swipe_refresh)    public SwipeRefreshLayout swipeRefresh;    @BindView(R.id.drawer_layout)    public DrawerLayout drawerLayout;    @BindView(R.id.title_city)    public TextView titleCity;    @BindView(R.id.iv_title_location)    ImageView ivTitleLocation;    @BindView(R.id.tv_weather)    TextView tvWeather;    @BindView(R.id.tv_nowweather_temp)    TextView tvNowWeatherTemp;    @BindView(R.id.tv_nowweather_detail)    TextView tvNowWeatherDetail;    @BindView(R.id.gridview_week_weather)    GridView gridViewWeekWeather;    private LocationService locationService;    private String weatherArea;    private String date;    private WeatherDetail weatherDetail;    private List<WeatherDetail.ResultsBean.WeatherDataBean> weatherList;    @Override    protected void initView() {        application.addActivity(this);        ButterKnife.bind(this);        initTopbar(this, "地区选择");        weatherDetail = (WeatherDetail) getIntent().getSerializableExtra("data");        weatherList = weatherDetail.getResults().get(0).getWeather_data();        titleCity.setText(getIntent().getStringExtra("area"));        showWeatherInfo(weatherList);        swipeRefresh.setColorSchemeResources(R.color.colorPrimary);        swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                getWeather(weatherArea);            }        });        for (int i = 0; i < weatherList.size(); i++) {            if (i == 0) {                weatherList.get(i).setDate(date);            }        }    }    @Override    protected int getLayout() {        return R.layout.activity_weather_detail;    }    /**     * 处理并展示Weather实体类中的数据。     */    private void showWeatherInfo(List<WeatherDetail.ResultsBean.WeatherDataBean> weatherList) {        WeatherDetail.ResultsBean.WeatherDataBean weather = weatherList.get(0);        String nowWeather = weather.getDate().split(" ")[2];        String nowTem = nowWeather.split("：")[1].replace(")", "");        date = weather.getDate().split(" ")[0];        tvNowWeatherTemp.setText(nowTem);        String detail = weather.getWind() + "\n"                + weather.getTemperature() + "\n"                + new CalendarUtil(Calendar.getInstance()).getlunar() + "\n"                + TimeUtil.gethour() + ":00" + "更新";        tvNowWeatherDetail.setText(detail);        tvWeather.setText(weather.getWeather());        weatherArea = titleCity.getText().toString();        setResult(RESULT_OK, getIntent().putExtra("area", titleCity.getText().toString()));        gridViewWeekWeather.setAdapter(new WeekWeatherAdapter(this, weatherList));    }    public void getWeather(final String weatherArea) {        if (weatherList != null) {            weatherList.clear();        }        if (isnetconnected) {            final String success = "success";            OkGo.get(String.format(API.BAIDU_WEATHER_URL, weatherArea))                    .tag(this)                    .execute(new StringCallback() {                        @Override                        public void onSuccess(final String s, Call call, Response response) {                            if (s.contains(success)) {                                runOnUiThread(new Runnable() {                                    @Override                                    public void run() {                                        weatherDetail = new Gson().fromJson(s, new TypeToken<WeatherDetail>() {                                        }.getType());                                        weatherList = weatherDetail.getResults().get(0).getWeather_data();                                        showWeatherInfo(weatherList);                                        if (swipeRefresh.isRefreshing()) {                                            swipeRefresh.setRefreshing(false);                                        }                                        dismissDialog();                                    }                                });                            }                        }                    });        } else {            if (swipeRefresh.isRefreshing()) {                swipeRefresh.setRefreshing(false);            }            dismissDialog();            ZToastUtils.showShort(this, getString(R.string.net_error));        }    }    @OnClick({R.id.iv_nav, R.id.iv_title_location})    public void onClick(View view) {        switch (view.getId()) {            case R.id.iv_nav:                drawerLayout.openDrawer(GravityCompat.START);                break;            case R.id.iv_title_location:                locationService = new LocationService(this);                mBDStartLocation();                break;            default:                break;        }    }    private void mBDStartLocation() {//开始定位        locationService.registerListener(mListener);        locationService.setLocationOption(locationService.getOption());        locationService.start();    }    @SuppressLint("HandlerLeak")    private Handler mHandler = new Handler() {        @Override        public void handleMessage(Message msg) {            //更新UI            switch (msg.what) {                case 1:                    String city = (String) msg.obj;                    if (TextUtils.isEmpty(city)) {                        titleCity.setText(getString(R.string.area));                    } else {                        titleCity.setText(city);                    }                    break;                default:                    break;            }        }    };    private BDLocationListener mListener = new BDLocationListener() {        @Override        public void onReceiveLocation(BDLocation bdLocation) {            //注销掉监听            locationService.unregisterListener(mListener);            locationService.stop();            String city = bdLocation.getCity();            Message msg = new Message();            //虽然Message的构造函数式public的，我们也可以通过以下两种方式通过循环对象获取Message            //msg = Message.obtain(uiHandler);            //msg = uiHandler.obtainMessage();            //what是我们自定义的一个Message的识别码，以便于在Handler的handleMessage方法中根据what识别            //出不同的Message，以便我们做出不同的处理操作            msg.what = 1;            //我们可以通过arg1和arg2给Message传入简单的数据            msg.obj = city;            //我们也可以通过给obj赋值Object类型传递向Message传入任意数据            //msg.obj = null;            //我们还可以通过setData方法和getData方法向Message中写入和读取Bundle类型的数据            //msg.setData(null);            //Bundle data = msg.getData();            //将该Message发送给对应的Handler            mHandler.sendMessage(msg);            ZPreferenceUtils.setPrefString(API.NOW_AREA, city);            showDialog();            getWeather(city);        }        @Override        public void onConnectHotSpotMessage(String s, int i) {        }    };    class LocationWorkReceiver extends BroadcastReceiver {        @Override        public void onReceive(Context context, Intent intent) {            String address = intent.getStringExtra(API.NOW_AREA);            Log.e(TAG, "registerBroadCastReceiver: address------------>" + address);            if (TextUtils.isEmpty(address)) {                titleCity.setText(getString(R.string.area));            } else {                titleCity.setText(address);            }            ZPreferenceUtils.setPrefString(API.NOW_AREA, address);            showDialog();            getWeather(address);        }    }    @Override    public void onDestroy() {        dismissDialog();        super.onDestroy();    }}