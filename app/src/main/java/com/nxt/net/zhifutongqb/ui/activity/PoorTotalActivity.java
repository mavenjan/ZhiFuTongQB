package com.nxt.net.zhifutongqb.ui.activity;import android.content.Intent;import android.os.Bundle;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.View;import android.widget.Toast;import com.google.gson.Gson;import com.google.gson.reflect.TypeToken;import com.lzy.okgo.OkGo;import com.lzy.okgo.callback.StringCallback;import com.nxt.net.zhifutongqb.R;import com.nxt.net.zhifutongqb.app.API;import com.nxt.net.zhifutongqb.base.BaseTitleActivity;import com.nxt.net.zhifutongqb.bean.GalleryModel;import com.nxt.net.zhifutongqb.bean.PoorObjectData;import com.nxt.net.zhifutongqb.ui.adapter.PoorDetailAdapter;import com.nxt.net.zhifutongqb.utils.ZPreferenceUtils;import com.nxt.net.zhifutongqb.utils.ZToastUtils;import java.util.ArrayList;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import okhttp3.Call;import okhttp3.Response;/** * Created by Maven on 2017/2/24. * Email: cyjiang_11@163.com * Description: */public class PoorTotalActivity extends BaseTitleActivity implements SwipeRefreshLayout.OnRefreshListener {    private static final String TAG = "PoorTotalActivity";    @BindView(R.id.swipe_container)    SwipeRefreshLayout swipeRefreshLayout;    @BindView(R.id.rv_poor_total)    RecyclerView mRecyclerView;    PoorObjectData poorObjectData = new PoorObjectData();    private List<GalleryModel> mDatas = new ArrayList<>();    public List<PoorObjectData> poorObjectDatas = new ArrayList<>();    public int size = 0;    private String photoUrl;    private String address;    private PoorDetailAdapter mAdapter;    @Override    protected void initView() {        application.addActivity(this);        swipeRefreshLayout.setColorSchemeResources(                android.R.color.holo_blue_light,                android.R.color.holo_green_light,                android.R.color.holo_orange_light,                android.R.color.holo_red_light        );        swipeRefreshLayout.setOnRefreshListener(this);        mRecyclerView.setLayoutManager(new GridLayoutManager(this, 3));        showDialog();        initData();    }    @Override    protected int getLayout() {        return R.layout.activity_poor_total;    }    private void initData() {        if (isnetconnected) {            OkGo.get(String.format(API.POOR_OBJECT_URL, ZPreferenceUtils.getPrefString(API.USERNAME, ""), 0))                    .tag(this)                    .execute(new StringCallback() {                        @Override                        public void onSuccess(String s, Call call, Response response) {                            Log.e(TAG, "onSuccess: result-------------->" + s);                            if (s.length() > 2) {                                poorObjectDatas = new Gson().fromJson(s, new TypeToken<List<PoorObjectData>>() {                                }.getType());                                size = poorObjectDatas.size();                                Log.e(TAG, "onSuccess: size---------->" + size);                                for (int i = 0; i < size; i++) {                                    photoUrl = API.HOST + poorObjectDatas.get(i).getHouseholdimgurl().split("\\|")[0];                                    if (poorObjectData.villagename == null) {                                        address = poorObjectDatas.get(i).getCountyname() + poorObjectDatas.get(i).getTownname();                                    } else {                                        address = poorObjectDatas.get(i).getCountyname()                                                + poorObjectDatas.get(i).getTownname()                                                + poorObjectDatas.get(i).getVillagename();                                    }                                    Log.e(TAG, "onSuccess: 第" + i + "个图像介绍------------->" + poorObjectDatas.get(i).getImageurl());                                    mDatas.add(new GalleryModel(photoUrl, poorObjectDatas.get(i).getHouseholdname(), address));                                }                                mAdapter = new PoorDetailAdapter(PoorTotalActivity.this, mDatas);                                mRecyclerView.setAdapter(mAdapter);                                if (swipeRefreshLayout.isRefreshing()) {                                    swipeRefreshLayout.setRefreshing(false);                                }                                dismissDialog();                                initEvent();                            } else {                                if (swipeRefreshLayout.isRefreshing()) {                                    swipeRefreshLayout.setRefreshing(false);                                }                                dismissDialog();                                ZToastUtils.showShort(PoorTotalActivity.this, "您暂时还没有需要帮扶的对象");                            }                        }                    });        } else {            if (swipeRefreshLayout.isRefreshing()) {                swipeRefreshLayout.setRefreshing(false);            }            dismissDialog();            ZToastUtils.showShort(this, R.string.network_isnot_available);        }    }    private void initEvent() {        mAdapter.setOnItemClickLitener(new PoorDetailAdapter.OnItemClickLitener() {            @Override            public void onItemClick(View view, int position) {                startActivityForResult(new Intent(PoorTotalActivity.this, PoorDetailActivity.class)                        .putExtra("poorObjectId", poorObjectDatas.get(position).getPoorhouseholdsinfoid()), 0);            }            @Override            public void onItemLongClick(View view, int position) {                Toast.makeText(PoorTotalActivity.this, position + " long click",                        Toast.LENGTH_SHORT).show();            }        });    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (resultCode == RESULT_OK) {            if (requestCode == 0) {                onRefresh();                setResult(RESULT_OK);            }        }    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        // TODO: add setContentView(...) invocation        ButterKnife.bind(this);    }    @Override    public void onRefresh() {        if (poorObjectDatas.size() > 0) {            poorObjectDatas.clear();            mDatas.clear();            Log.e(TAG, "onRefresh: poorDatas---------->" + poorObjectDatas.size());        }        initData();    }}