package com.nxt.net.zhifutongqb.ui.activity;import android.content.Intent;import android.text.Editable;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import com.google.gson.Gson;import com.google.gson.reflect.TypeToken;import com.lzy.okgo.OkGo;import com.nxt.net.zhifutongqb.R;import com.nxt.net.zhifutongqb.app.API;import com.nxt.net.zhifutongqb.base.BaseActivity;import com.nxt.net.zhifutongqb.bean.UserBean;import com.nxt.net.zhifutongqb.callback.StringDialogCallback;import com.nxt.net.zhifutongqb.utils.CommonUtils;import com.nxt.net.zhifutongqb.utils.MD5Utils;import com.nxt.net.zhifutongqb.utils.ZPreferenceUtils;import com.nxt.net.zhifutongqb.utils.ZToastUtils;import butterknife.BindView;import butterknife.OnClick;import butterknife.OnTextChanged;import okhttp3.Call;import okhttp3.Response;/** * Created by Maven on 2017/2/21. * Email: cyjiang_11@163.com * Description: */public class LoginActivity extends BaseActivity {    private static final String TAG = "LoginActivity";    @BindView(R.id.user_name)    EditText userName;    @BindView(R.id.user_password)    EditText userPassword;    @BindView(R.id.tv_forget_pwd)    TextView tvForgetPwd;    @BindView(R.id.btn_login)    Button btnLogin;    private String currentUsername;    private String currentPassword;    private String currentPasswordMD5;    @Override    protected void initView() {        application.addActivity(this);    }    @Override    protected int getLayout() {        return R.layout.activity_login;    }    @OnTextChanged(value = R.id.user_name, callback = OnTextChanged.Callback.TEXT_CHANGED)    void onTextChanged(CharSequence s, int start, int before, int count) {        //用户名改变，密码清空        userPassword.setText(null);    }    @OnTextChanged(value = R.id.user_password, callback = OnTextChanged.Callback.AFTER_TEXT_CHANGED)    void afterTextChanged(Editable s) {        if (!TextUtils.isEmpty(userName.getText().toString().trim())                && !TextUtils.isEmpty(userPassword.getText().toString().trim())) {            btnLogin.setClickable(true);            btnLogin.setBackgroundResource(R.drawable.button_bg2);        } else {            btnLogin.setClickable(false);            btnLogin.setBackgroundResource(R.drawable.shape_login_gray_button_layout);        }    }    public void login() {        if (!CommonUtils.isNetWorkConnected(this)) {            Toast.makeText(this, R.string.network_isnot_available, Toast.LENGTH_SHORT).show();            return;        }        currentUsername = userName.getText().toString().trim();        currentPassword = userPassword.getText().toString().trim();        currentPasswordMD5 = MD5Utils.encode(currentPassword);        Log.e(TAG, "login: MD5-password------------->" + currentPasswordMD5);        if (TextUtils.isEmpty(currentUsername)) {            Toast.makeText(this, R.string.User_name_cannot_be_empty, Toast.LENGTH_SHORT).show();            userName.requestFocus();            return;        }        if (TextUtils.isEmpty(currentPassword)) {            Toast.makeText(this, R.string.Password_cannot_be_empty, Toast.LENGTH_SHORT).show();            userPassword.requestFocus();            return;        }        OkGo.get(String.format(API.LOGIN_URL, currentUsername, currentPasswordMD5)) // 请求方式和请求url                .tag(this)                       // 请求的 tag, 主要用于取消对应的请求                .execute(new StringDialogCallback(this) {                    @Override                    public void onSuccess(String s, Call call, Response response) {                        UserBean userData = new Gson().fromJson(s, new TypeToken<UserBean>() {                        }.getType());                        Log.e(TAG, "onSuccess: userName------------->" + currentUsername);                        Log.e(TAG, "onSuccess: userPassword------------->" + currentPassword);                        Log.e(TAG, "onSuccess: userPasswordMD5------------->" + currentPasswordMD5);                        Log.e(TAG, "onSuccess: C===|==================>看我神威，无BUG不摧");                        Log.e(TAG, "onSuccess: Code------------->" + userData.getCode());                        Log.e(TAG, "onSuccess: userName------------->" + userData.getName());                        Log.e(TAG, "onSuccess: userId------------->" + userData.getUserId());                        switch (userData.getCode()) {                            case "-2":                                ZToastUtils.showShort(LoginActivity.this, getString(R.string.account_abnormal));                                break;                            case "-1":                                ZToastUtils.showShort(LoginActivity.this, getString(R.string.account_nonentity));                                break;                            case "2":                                ZToastUtils.showShort(LoginActivity.this, getString(R.string.account_locked));                                break;                            case "3":                                ZToastUtils.showShort(LoginActivity.this, getString(R.string.login_success));                                startActivity(new Intent(LoginActivity.this, MainActivity.class));                                ZPreferenceUtils.setPrefBoolean(API.IS_LOGIN, true);    //已经登录                                ZPreferenceUtils.setPrefString(API.USERNAME, currentUsername);                                ZPreferenceUtils.setPrefString(API.USER_NAME, userData.getName());                                ZPreferenceUtils.setPrefString(API.USER_ID, userData.getUserId());                                ZPreferenceUtils.setPrefString(API.USER_PHOTO, userData.getAvatarUrl());                                finish();                                break;                            case "4":                                ZToastUtils.showShort(LoginActivity.this, getString(R.string.password_wrong));                                break;                        }                    }                });    }    @OnClick({R.id.tv_forget_pwd, R.id.btn_login})    public void onClick(View view) {        switch (view.getId()) {            case R.id.tv_forget_pwd:                startActivity(new Intent(this, RegisterActivity.class).putExtra("type", true));                break;            case R.id.btn_login:                login();                break;        }    }}