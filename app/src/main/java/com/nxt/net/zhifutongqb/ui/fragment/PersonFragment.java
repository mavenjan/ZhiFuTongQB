package com.nxt.net.zhifutongqb.ui.fragment;import android.app.AlertDialog;import android.content.DialogInterface;import android.content.Intent;import android.net.Uri;import android.support.constraint.ConstraintLayout;import android.text.TextUtils;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import com.bumptech.glide.Glide;import com.bumptech.glide.load.engine.DiskCacheStrategy;import com.nxt.net.zhifutongqb.R;import com.nxt.net.zhifutongqb.app.API;import com.nxt.net.zhifutongqb.bean.UserBean;import com.nxt.net.zhifutongqb.ui.activity.SignHistoryActivity;import com.nxt.net.zhifutongqb.base.ZBaseFragment;import com.nxt.net.zhifutongqb.ui.activity.MainActivity;import com.nxt.net.zhifutongqb.utils.CommonUtils;import com.nxt.net.zhifutongqb.utils.SharePrefHelper;import com.nxt.net.zhifutongqb.utils.UpdateManager;import com.nxt.net.zhifutongqb.utils.ZPreferenceUtils;import butterknife.BindView;import butterknife.ButterKnife;import butterknife.OnClick;/** * Created by Maven on 2017/2/15. * Email: cyjiang_11@163.com * Description: */public class PersonFragment extends ZBaseFragment {    private static final String TAG = "PersonFragment";    @BindView(R.id.iv_person_avatar)    ImageView ivPersonAvatar;    @BindView(R.id.tv_person_user)    TextView tvPersonUser;    @BindView(R.id.person_tv_vip)    TextView personTvVip;    @BindView(R.id.col_person_centre)    ConstraintLayout colPersonCentre;    @BindView(R.id.view)    View view;    @BindView(R.id.tv_person_right)    TextView tvPersonRight;    @BindView(R.id.tv_person_info)    TextView tvPersonInfo;    @BindView(R.id.col_person_me)    ConstraintLayout colPersonMe;    @BindView(R.id.col_person_sign)    ConstraintLayout colPersonAnswer;    @BindView(R.id.col_person_feed_back)    ConstraintLayout colPersonFeedBack;    @BindView(R.id.col_person_update)    ConstraintLayout colPersonUpdate;    @BindView(R.id.col_person_contact)    ConstraintLayout colPersonContact;    @BindView(R.id.col_person_setting)    ConstraintLayout colPersonSetting;    private TextView mTvTitle;    private View mFakeStatusBar;    protected AlertDialog mAlertDialog;    private TextView tvUserName;    private TextView tvUserTel;    private TextView tvUserCompany;    private TextView tvAddress;    private TextView tvUserType;    private TextView tvUserGender;    private TextView tvUserDepartmentName;    private UserBean mUserBean;    @Override    protected void initView(View view) {        ButterKnife.bind(this, view);        mAlertDialog = new AlertDialog.Builder(getActivity()).create();        mUserBean = (UserBean) SharePrefHelper.getObject("user");                if (ZPreferenceUtils.getPrefBoolean(API.IS_LOGIN, true)) {            if (CommonUtils.isNetWorkConnected(getActivity())) {                String userPhotoUrl = API.HOST + ZPreferenceUtils.getPrefString(API.USER_PHOTO, "");                Log.e(TAG, "onCreateView: url------------>" + userPhotoUrl);                Glide.with(getActivity()).load(userPhotoUrl)                        .diskCacheStrategy(DiskCacheStrategy.ALL)                        .skipMemoryCache(false)                        .into(ivPersonAvatar);            }        }        tvPersonUser.setText(ZPreferenceUtils.getPrefString(API.USER_NAME, ""));        initUserInfoDialog();    }    @Override    protected int getLayoutId() {        return R.layout.fragment_person;    }    @Override    @OnClick({R.id.iv_person_avatar, R.id.tv_person_right, R.id.tv_person_info, R.id.col_person_me, R.id.col_person_sign, R.id.col_person_feed_back, R.id.col_person_update, R.id.col_person_contact, R.id.col_person_setting})    public void onClick(View view) {        switch (view.getId()) {            case R.id.iv_person_avatar:                break;            case R.id.tv_person_right:                break;            case R.id.tv_person_info:                showUserInfoDialog();                mAlertDialog.show();                break;            case R.id.col_person_me:                break;            case R.id.col_person_sign:                startActivity(new Intent(getActivity(), SignHistoryActivity.class));                break;            case R.id.col_person_feed_back:                break;            case R.id.col_person_update:                new UpdateManager(getActivity(), false).checkUpdate();                break;            case R.id.col_person_contact:                Intent intent = new Intent(Intent.ACTION_DIAL);                Uri data = Uri.parse("tel:" + "0392-2266779");                intent.setData(data);                startActivity(intent);                break;            case R.id.col_person_setting:                showLogOutDialog();                break;            default:                break;        }    }    //初始化用户信息dialog    private void initUserInfoDialog() {        View dialogview = LayoutInflater.from(getActivity()).inflate(R.layout.dialog_user_info, null);        tvUserName = (TextView) dialogview.findViewById(R.id.tv_user_name);        tvUserGender = (TextView) dialogview.findViewById(R.id.tv_gender);        tvUserType = (TextView) dialogview.findViewById(R.id.tv_role);        tvUserTel = (TextView) dialogview.findViewById(R.id.tv_user_tel);        tvUserDepartmentName = (TextView) dialogview.findViewById(R.id.tv_user_company);        tvAddress = (TextView) dialogview.findViewById(R.id.tv_user_address);        mAlertDialog.setView(dialogview);    }    //显示用户信息dialog    private void showUserInfoDialog() {        if (!TextUtils.isEmpty(mUserBean.getName())) {            tvUserName.setText(mUserBean.getName());        } else {            tvUserName.setText("您还没有留下您的大名");        }        if (!TextUtils.isEmpty(mUserBean.getGender())) {            tvUserGender.setText(mUserBean.getGender());        } else {            tvUserGender.setText("你还没有上传性别信息");        }        if (!TextUtils.isEmpty(mUserBean.getUserType())) {            tvUserType.setText(mUserBean.getUserType());        } else {            tvUserType.setText("你还没有上传角色信息");        }        if (!TextUtils.isEmpty(mUserBean.getAccount())) {            tvUserTel.setText(mUserBean.getAccount());        } else {            tvUserTel.setText("您还没有手机号");        }        if (!TextUtils.isEmpty(mUserBean.getWorkArea())) {            tvAddress.setText(mUserBean.getWorkArea());        } else {            tvAddress.setText("您还没有上传相关内容");        }        if (!TextUtils.isEmpty(mUserBean.getDepartmentName())) {            tvUserDepartmentName.setText(mUserBean.getDepartmentName());        } else {            tvUserDepartmentName.setText("您还没有上传相关内容");        }    }    private AlertDialog exitDialog;    private void showLogOutDialog() {        if (exitDialog == null) {            exitDialog = new AlertDialog.Builder(getActivity())                    .setTitle("提示")                    .setMessage("确认注销账户吗?")                    .setNegativeButton("取消", null)                    .setPositiveButton(getString(R.string.ok), new DialogInterface.OnClickListener() {                        @Override                        public void onClick(DialogInterface dialog, int which) {                            MainActivity parentActivity = (MainActivity) getActivity();                            parentActivity.logout();                        }                    }).create();        }        exitDialog.show();    }}