package com.nxt.net.zhifutongqb.base;import android.app.ProgressDialog;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.Window;import com.google.gson.Gson;import com.jaeger.library.StatusBarUtil;import com.lzy.okgo.OkGo;import com.nxt.net.zhifutongqb.R;import com.nxt.net.zhifutongqb.utils.CommonUtils;import com.nxt.net.zhifutongqb.widget.LoadingDialog;import com.nxt.net.zhifutongqb.app.MyApplication;import butterknife.ButterKnife;import butterknife.Unbinder;/** * Created by Maven on 2017/1/21. * Email: cyjiang_11@163.com */public abstract class BaseActivity extends AppCompatActivity {    private static final String TAG = "BaseActivity";    protected LoadingDialog loadingDialog;    protected MyApplication application;    protected Unbinder unbinder;    protected boolean isnetconnected;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(getLayout());        MyApplication.getInstance().addActivity(this);        unbinder = ButterKnife.bind(this);        isnetconnected = CommonUtils.isNetWorkConnected(this);        //获取当前实例的类名        Log.d(TAG, "setContentView------------->" + getClass().getSimpleName());        setStatusBar();        application = MyApplication.getInstance();        initView();    }    /**     * 初始化控件     */    protected abstract void initView();    /**     * 初始化界面     */    protected abstract int getLayout();    protected void setStatusBar() {        StatusBarUtil.setTranslucentForImageViewInFragment(this, null);//        StatusBarUtil.setColor(this, getResources().getColor(R.color.colorPrimary));    }    private ProgressDialog dialog;    public void showLoading() {        if (dialog != null && dialog.isShowing()) return;        dialog = new ProgressDialog(this);        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);        dialog.setCanceledOnTouchOutside(false);        dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);        dialog.setMessage("请求网络中...");        dialog.show();    }    public void dismissLoading() {        if (dialog != null && dialog.isShowing()) {            dialog.dismiss();        }    }    protected void showDialog() {        loadingDialog = new LoadingDialog(this, getString(R.string.is_loading));        loadingDialog.show();    }    protected void dismissDialog() {        if (loadingDialog != null && loadingDialog.isShowing()) {            new Thread(new Runnable() {                @Override                public void run() {                    long startTime = System.currentTimeMillis();                    while (System.currentTimeMillis() - startTime < 500) {                        try {                            Thread.sleep(100);                        } catch (InterruptedException e) {                            loadingDialog.dismiss();                        }                    }                    loadingDialog.dismiss();                }            }).start();        }    }    //转json    public static String beanToJSONString(Object bean) {        return new Gson().toJson(bean);    }    @Override    protected void onDestroy() {        super.onDestroy();        //Activity销毁时，取消网络请求        OkGo.getInstance().cancelTag(this);    }}