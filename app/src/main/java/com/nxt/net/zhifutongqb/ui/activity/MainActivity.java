package com.nxt.net.zhifutongqb.ui.activity;import android.annotation.TargetApi;import android.app.ProgressDialog;import android.content.Context;import android.content.Intent;import android.net.Uri;import android.os.Build;import android.os.PowerManager;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentTransaction;import android.view.KeyEvent;import android.widget.FrameLayout;import android.widget.Toast;import com.ashokvarma.bottomnavigation.BottomNavigationBar;import com.ashokvarma.bottomnavigation.BottomNavigationItem;import com.jaeger.library.StatusBarUtil;import com.nxt.net.zhifutongqb.R;import com.nxt.net.zhifutongqb.app.API;import com.nxt.net.zhifutongqb.runtimepermissions.PermissionsManager;import com.nxt.net.zhifutongqb.runtimepermissions.PermissionsResultAction;import com.nxt.net.zhifutongqb.ui.fragment.HomeFragment;import com.nxt.net.zhifutongqb.ui.fragment.NewsFragment;import com.nxt.net.zhifutongqb.ui.fragment.PersonFragment;import com.nxt.net.zhifutongqb.app.MyApplication;import com.nxt.net.zhifutongqb.base.BaseActivity;import com.nxt.net.zhifutongqb.ui.fragment.DailyFragment;import com.nxt.net.zhifutongqb.utils.ZPreferenceUtils;import java.util.ArrayList;import java.util.List;/** * Created by Maven on 2017/2/15. * Email: cyjiang_11@163.com * Description: */public class MainActivity extends BaseActivity implements BottomNavigationBar.OnTabSelectedListener {    private boolean islogin = false;    private FrameLayout mframeLayout;    private BottomNavigationBar mBottomNavigationBar;    private List<Fragment> fragmentList = new ArrayList<>();    private int index;    // 当前fragment的index    private int currentindex;    @Override    protected void initView() {        application.addActivity(this);        islogin = ZPreferenceUtils.getPrefBoolean(API.IS_LOGIN, false);        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {            String packageName = getPackageName();            PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);            if (!pm.isIgnoringBatteryOptimizations(packageName)) {                Intent intent = new Intent();                intent.setAction(android.provider.Settings.ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS);                intent.setData(Uri.parse("package:" + packageName));                if (intent.resolveActivity(getPackageManager()) != null) {                    startActivity(intent);                }//                startActivity(intent);            }        }        // runtime permission for android 6.0, just require all permissions here for simple        requestPermissions();        HomeFragment homeFragment = new HomeFragment();        NewsFragment newsFragment = new NewsFragment();//        DailyFragment dailyFragment = new DailyFragment();        PersonFragment personFragment = new PersonFragment();        fragmentList.add(homeFragment);        fragmentList.add(newsFragment);//        fragmentList.add(dailyFragment);        fragmentList.add(personFragment);        mframeLayout = (FrameLayout) findViewById(R.id.fl_home);        mBottomNavigationBar = (BottomNavigationBar) findViewById(R.id.bottom_navigation_bar);        mBottomNavigationBar.setMode(BottomNavigationBar.MODE_FIXED);        mBottomNavigationBar.setBackgroundStyle(BottomNavigationBar.BACKGROUND_STYLE_STATIC);        mBottomNavigationBar                .addItem(new BottomNavigationItem(R.drawable.ic_home, "主页").setActiveColorResource(R.color.colorPrimary))                .addItem(new BottomNavigationItem(R.drawable.ic_news, "资讯").setActiveColorResource(R.color.colorPrimary))//                .addItem(new BottomNavigationItem(R.drawable.ic_daily, "日志").setActiveColorResource(R.color.colorPrimary))                .addItem(new BottomNavigationItem(R.drawable.ic_me, "我的").setActiveColorResource(R.color.colorPrimary))                .setFirstSelectedPosition(0)                .initialise();        // 添加显示第一个fragment        getSupportFragmentManager().beginTransaction()                .add(R.id.fl_home, homeFragment)                .add(R.id.fl_home, personFragment)                .hide(personFragment)                .show(homeFragment)                .commit();        mBottomNavigationBar.setTabSelectedListener(this);    }    @TargetApi(23)    private void requestPermissions() {        PermissionsManager.getInstance().requestAllManifestPermissionsIfNecessary(this, new PermissionsResultAction() {            @Override            public void onGranted() {//				Toast.makeText(MainActivity.this, "All permissions have been granted", Toast.LENGTH_SHORT).show();            }            @Override            public void onDenied(String permission) {                //Toast.makeText(MainActivity.this, "Permission " + permission + " has been denied", Toast.LENGTH_SHORT).show();            }        });    }    @Override    protected int getLayout() {        return R.layout.activity_main;    }    @Override    public void onTabSelected(int position) {        if (currentindex != position) {            FragmentTransaction trx = getSupportFragmentManager().beginTransaction();            trx.hide(fragmentList.get(currentindex));            if (!fragmentList.get(position).isAdded()) {                trx.add(R.id.fl_home, fragmentList.get(position));            }            trx.show(fragmentList.get(position)).commit();        }        currentindex = position;    }    @Override    public void onTabUnselected(int position) {    }    @Override    public void onTabReselected(int position) {    }    @Override    protected void setStatusBar() {        StatusBarUtil.setTranslucentForImageViewInFragment(MainActivity.this, null);    }    public void logout() {        final ProgressDialog pd = new ProgressDialog(this);        String st = getResources().getString(R.string.Are_logged_out);        pd.setMessage(st);        pd.setCanceledOnTouchOutside(false);        pd.show();        runOnUiThread(new Runnable() {            public void run() {                pd.dismiss();                // 重新显示登陆页面                MyApplication.getInstance().cleanspf();                (MainActivity.this).finish();                startActivity(new Intent(MainActivity.this, LoginActivity.class));            }        });    }    private long exitTime;    /**     * 重写主界面下的返回键     */    @Override    public boolean onKeyDown(int keyCode, KeyEvent event) {        if (keyCode == KeyEvent.KEYCODE_BACK) {            if (event.getAction() == KeyEvent.ACTION_DOWN) {                if ((System.currentTimeMillis() - exitTime) > 2000) {                    Toast.makeText(getApplicationContext(), getString(R.string.exit_notice),                            Toast.LENGTH_SHORT).show();                    exitTime = System.currentTimeMillis();                } else {//                    moveTaskToBack(false);                    MyApplication.getInstance().exit();                    finish();                }            }            return true;        }        return super.onKeyDown(keyCode, event);    }}